{"version":3,"file":"static/js/357.39a58a0b.chunk.js","mappings":"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","sources":["components/Banner/index.jsx","features/Information/components/DisplayText/index.jsx","features/Information/components/CardHeader/index.jsx","features/Information/components/FormLabel/index.jsx","features/Information/components/ButtonSubmit/index.jsx","features/Information/components/CardBody/index.jsx","features/Information/components/UserInformation/index.jsx","api/imageApi.js","components/ModalBox/index.jsx","utils/ResizeImage.js","features/Information/components/UserAccount/index.jsx","features/Information/pages/UserProfile/index.jsx","constants/sounds.js","utils/PlaySound.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Flex, Heading, Text, Link } from '@chakra-ui/react'\r\nimport IMAGES from '../../constants/images';\r\nimport { ChevronRightIcon } from '@chakra-ui/icons'\r\nimport { AiOutlineRight } from \"react-icons/ai\";\r\n\r\nBanner.propTypes = {\r\n    heading: PropTypes.string\r\n};\r\n\r\nfunction Banner(props) {\r\n    return (\r\n        <Container\r\n            margin='0'\r\n            padding='0'\r\n            maxWidth='100%'\r\n            width='auto'\r\n            backgroundImage={IMAGES.Banner}\r\n            height='212'\r\n            marginTop='148px'\r\n            padding='64px 0'\r\n            backgroundSize={'cover'}\r\n            backgroundRepeat='no-repeat'\r\n            backgroundPosition='center center'\r\n            position='relative'\r\n            backgroundSize='cover'\r\n        >\r\n            <Container\r\n                margin='0 190px'\r\n                padding='0'\r\n                maxWidth='100%'\r\n                width='auto'\r\n            >\r\n                <Heading\r\n                    color='#fff'\r\n                    fontSize='60px'\r\n                >\r\n                    {props.heading}\r\n                </Heading>\r\n                <Flex alignItems='center' justifyContent='center' borderRadius='5px' background='#D61C62' height='30px' maxWidth='180px' padding='5px 30px'>\r\n                    <Link lineHeight='14px' fontSize='14px' fontWeight='400' color='#fff'> Home</Link>\r\n                    <ChevronRightIcon color='#fff' />\r\n                    <Text lineHeight='14px' fontSize='14px' fontWeight='400' color='#cecece'>{props.heading}</Text>\r\n                </Flex>\r\n            </Container>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Flex, Heading, Text } from '@chakra-ui/react';\r\n\r\nDisplayText.propTypes = {\r\n\r\n};\r\n\r\nfunction DisplayText(props) {\r\n   const { userName } = props;\r\n   return (\r\n      <Flex\r\n         align={'center'}\r\n         marginBottom='1.25rem'\r\n      >\r\n         <Flex\r\n            marginX={'-15px'}\r\n            wrap='wrap'\r\n            direction={'column'}\r\n         >\r\n            <Heading as='h1' size='lg' isTruncated\r\n               marginBottom={'0.75rem'}\r\n            >\r\n               Hello {userName}\r\n            </Heading>\r\n            <Text\r\n               fontSize={'lg'}\r\n            >\r\n               This is your profile page. You can see the progress you've made with <br /> your work and manage your projects or assigned tasks\r\n            </Text>\r\n         </Flex>\r\n      </Flex>\r\n   );\r\n}\r\n\r\nexport default DisplayText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Flex, Heading, Text } from '@chakra-ui/react';\r\n\r\nCardHeader.propTypes = {\r\n\r\n};\r\n\r\nfunction CardHeader(props) {\r\n   return (\r\n      <Flex\r\n         border={'0'}\r\n         _first={{\r\n            borderRadius: 'calc(.375rem - 1px) calc(.375rem - 1px) 0 0'\r\n         }}\r\n\r\n         bg='#fff'\r\n\r\n         marginBottom={'0'}\r\n         padding={'1.25rem'}\r\n\r\n         justify='space-between'\r\n      >\r\n         <Text\r\n            fontSize={'larger'}\r\n            fontWeight='medium'\r\n\r\n         >\r\n            My profile\r\n         </Text>\r\n         <Button\r\n            bg={'#5e72e4'}\r\n            color='#fff'\r\n\r\n            lineHeight='1.5'\r\n\r\n            size='sm'\r\n            padding={'.25rem .5rem'}\r\n\r\n            boxShadow={'0 4px 6px rgb(50 50 93 / 11%), 0 1px 3px rgb(0 0 0 / 8%)'}\r\n            borderRadius='.375rem'\r\n         >\r\n            Settings\r\n         </Button>\r\n      </Flex>\r\n   );\r\n}\r\n\r\nexport default CardHeader;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text } from '@chakra-ui/react';\r\n\r\nFormLable.propTypes = {\r\n   content: PropTypes.string,\r\n};\r\n\r\nFormLable.DefaultProp = {\r\n   content: '',\r\n}\r\n\r\nfunction FormLable(props) {\r\n   const { content } = props;\r\n\r\n   return (\r\n      <Text\r\n         fontSize='13px'\r\n         fontWeight={'500'}\r\n\r\n         textTransform='uppercase'\r\n         color={'#8898aa'}\r\n         letterSpacing='.04em'\r\n\r\n         paddingY={'0.25rem'}\r\n         marginBottom='1.5rem'\r\n      >\r\n         {content}\r\n      </Text>\r\n   );\r\n}\r\n\r\nexport default FormLable;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@chakra-ui/react';\r\n\r\nButtonSubmit.propTypes = {\r\n   isLoading: PropTypes.bool,\r\n   content: PropTypes.string,\r\n};\r\n\r\nButtonSubmit.defaultProps = {\r\n   isLoading: false,\r\n   content: 'Submit',\r\n};\r\n\r\nfunction ButtonSubmit(props) {\r\n   const { isLoading, content } = props;\r\n\r\n   return (\r\n      <Button\r\n         type='submit'\r\n\r\n         colorScheme='pink'\r\n\r\n         width={'100%'}\r\n         h='50px'\r\n         size={'lg'}\r\n\r\n         marginTop='25px'\r\n         paddingY={'4'}\r\n         paddingX={'0'}\r\n\r\n         //bgGradient='linear(to-tr, pink.300, red.300)'\r\n         bg={'#D61C62'}\r\n\r\n         _hover={{\r\n            bgGradient: 'linear(to-tr, #D61C62, pink.300)',\r\n         }}\r\n         isLoading={isLoading}\r\n      >\r\n         {content}\r\n      </Button>\r\n   );\r\n}\r\n\r\nexport default ButtonSubmit;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Divider, Flex, FormControl, FormErrorMessage, FormLabel, HStack, Input, InputGroup, Skeleton, Spacer, useToast, useBreakpointValue } from '@chakra-ui/react';\r\nimport FormLable from '../FormLabel';\r\nimport ButtonSubmit from '../ButtonSubmit';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateInfo } from '../../userSlice';\r\n\r\nCardBody.propTypes = {\r\n\r\n};\r\n\r\nconst userInformationSchema = yup.object().shape({\r\n   firstName: yup\r\n      .string(),\r\n   lastName: yup\r\n      .string(),\r\n   phone: yup\r\n      .string()\r\n      .min(9, '⚠ Phone number must be at least 9 characters')\r\n      .max(11, '⚠ Phone number must be at most 11 charaters'),\r\n   address: yup\r\n      .string(),\r\n   city: yup.string(),\r\n   province: yup.string(),\r\n   country: yup.string(),\r\n});\r\n\r\nfunction CardBody(props) {\r\n   const { userInfo, isLoading, message } = props;\r\n   const flexDirection = useBreakpointValue({ base: 'column', lg: 'row' });\r\n   const toast = useToast();\r\n   const [isLoadingSubmit, setIsLoadingSubmit] = useState(false);\r\n   console.log(\">>> check isLoading: \", isLoading);\r\n   console.log(\">>> check userInfo\", userInfo);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const { register, handleSubmit, reset, formState: { errors }, setValue } = useForm({\r\n      mode: 'all',\r\n      resolver: yupResolver(userInformationSchema),\r\n   });\r\n\r\n   const statusAddress = userInfo && userInfo.address;\r\n   const AddressDisplay = () => {\r\n      var ads = '';\r\n      if (statusAddress && userInfo.address.houseNumber) {\r\n         ads += userInfo.address.houseNumber;\r\n      }\r\n      if (statusAddress && userInfo.address.streetName) {\r\n         ads += \" \" + userInfo.address.streetName;\r\n      }\r\n      return ads;\r\n   };\r\n\r\n   useEffect(() => {\r\n      setValue(\"firstName\", userInfo && userInfo.firstName ? userInfo.firstName : '');\r\n      setValue(\"lastName\", userInfo && userInfo.lastName ? userInfo.lastName : '');\r\n      setValue(\"phone\", userInfo && userInfo.phone ? userInfo.phone : '');\r\n      setValue(\"address\", AddressDisplay());\r\n      setValue(\"city\", statusAddress && userInfo.address.city ? userInfo.address.city : '')\r\n      setValue(\"province\", statusAddress && userInfo.address.province ? userInfo.address.province : '')\r\n      setValue(\"country\", statusAddress && userInfo.address.country ? userInfo.address.country : '')\r\n   }, [userInfo]);\r\n\r\n   const _onSubmitForm = (data) => {\r\n      setIsLoadingSubmit(true);\r\n      console.log(\">>> Check submit form cardbody: \", data);\r\n      // check space data.address\r\n      const dataAddress = data.address.trim();\r\n      const indexOfSpacing = dataAddress.indexOf(\" \");\r\n      let houseNum, streetN;\r\n      if (indexOfSpacing > 0) {\r\n         houseNum = dataAddress.slice(0, indexOfSpacing);\r\n         streetN = dataAddress.slice((indexOfSpacing + 1), dataAddress.length)\r\n      }\r\n\r\n      const params = {\r\n         address: {\r\n            city: data.city,\r\n            country: data.country,\r\n            houseNumber: houseNum ? houseNum : '',\r\n            province: data.province,\r\n            streetName: streetN ? streetN : '',\r\n         },\r\n         avatar: userInfo && userInfo.avatar ? userInfo.avatar : process.env.REACT_APP_DEFAULT_IMAGE,\r\n         firstName: data.firstName,\r\n         lastName: data.lastName,\r\n         phone: data.phone,\r\n      }\r\n      console.log(params);\r\n      dispatch(updateInfo(params))\r\n         .unwrap()\r\n         .then((res) => {\r\n            toast({\r\n               title: 'Change avatar successfully 😚😗😚',\r\n               status: 'success',\r\n               duration: 2000,\r\n               isClosable: true,\r\n               position: 'top',\r\n            });\r\n         })\r\n         .catch((err) => {\r\n            toast({\r\n               title: 'Something wrongs when save your changing 😢😢😢',\r\n               description: err,\r\n               status: 'error',\r\n               duration: 2000,\r\n               isClosable: true,\r\n               position: 'top',\r\n            });\r\n         })\r\n         .finally(() => {\r\n            setIsLoadingSubmit(false);\r\n         });\r\n   };\r\n\r\n   return (\r\n      <form\r\n         style={{ padding: '1.5rem' }}\r\n         onSubmit={handleSubmit(_onSubmitForm)}\r\n      >\r\n         <FormLable content={'user information'} />\r\n         <Flex\r\n            direction={flexDirection}\r\n            justify='space-around'\r\n         >\r\n            <FormControl\r\n               isRequired\r\n               marginBottom={'4'}\r\n               w={flexDirection === 'row' ? '330px' : ''}\r\n               paddingX='15px'\r\n               isInvalid={!!errors?.firstName?.message}\r\n               errortext={errors?.firstName?.message}\r\n            >\r\n               <FormLabel color={'#525f7f'}>First name</FormLabel>\r\n               <Skeleton isLoaded={!isLoading}>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='Thang'\r\n                        bg='white'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        // defaultValue={userInfo && userInfo.firstName ? userInfo.firstName : ''}\r\n                        {...register('firstName')}\r\n                     />\r\n                  </InputGroup>\r\n               </Skeleton>\r\n               <FormErrorMessage>{errors?.firstName?.message}</FormErrorMessage>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n               isRequired\r\n               marginBottom={'4'}\r\n               w={flexDirection === 'row' ? '330px' : ''}\r\n               paddingX='15px'\r\n               isInvalid={!!errors?.lastName?.message}\r\n               errortext={errors?.lastName?.message}\r\n            >\r\n               <FormLabel color={'#525f7f'}>Last name</FormLabel>\r\n               <Skeleton isLoaded={!isLoading}>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='Duong Duc'\r\n                        bg='white'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        // defaultValue={userInfo && userInfo.lastName ? userInfo.lastName : ''}\r\n                        {...register('lastName')}\r\n                     />\r\n                  </InputGroup>\r\n               </Skeleton>\r\n               <FormErrorMessage>{errors?.lastName?.message}</FormErrorMessage>\r\n            </FormControl>\r\n         </Flex>\r\n         <Spacer h={'15px'} />\r\n         <Flex\r\n            direction={flexDirection}\r\n            justify='space-around'\r\n         >\r\n            <FormControl\r\n               isRequired\r\n               marginBottom={'4'}\r\n               w={flexDirection === 'row' ? '330px' : ''}\r\n               paddingX='15px'\r\n            >\r\n               <FormLabel color={'#525f7f'} >Email</FormLabel>\r\n               <Skeleton isLoaded={!isLoading}>\r\n                  <InputGroup>\r\n                     <Input\r\n                        isDisabled\r\n                        borderColor={'gray.500'}\r\n                        placeholder='thangduc.duong14@gmail.com'\r\n                        bg='white'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        defaultValue={userInfo && userInfo.email ? userInfo.email : ''}\r\n                     />\r\n                  </InputGroup>\r\n               </Skeleton>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n               isRequired\r\n               marginBottom={'4'}\r\n               w={flexDirection === 'row' ? '330px' : ''}\r\n               paddingX='15px'\r\n               isInvalid={!!errors?.phone?.message}\r\n               errortext={errors?.phone?.message}\r\n            >\r\n               <FormLabel color={'#525f7f'}>Phone number</FormLabel>\r\n               <Skeleton isLoaded={!isLoading}>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='098x0xxx42'\r\n                        bg='white'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        {...register('phone')}\r\n                     />\r\n                  </InputGroup>\r\n               </Skeleton>\r\n               <FormErrorMessage>{errors?.phone?.message}</FormErrorMessage>\r\n            </FormControl>\r\n         </Flex>\r\n         <Divider\r\n            marginY={'1.5rem'}\r\n         />\r\n         <FormLable content={'contact information'} />\r\n         <FormControl\r\n            isRequired\r\n            marginBottom={'4'}\r\n            paddingX='27px'\r\n            isInvalid={!!errors?.address?.message}\r\n            errortext={errors?.address?.message}\r\n         >\r\n            <FormLabel color={'#525f7f'}>Address</FormLabel>\r\n            <Skeleton isLoaded={!isLoading}>\r\n               <InputGroup>\r\n                  <Input\r\n                     placeholder='136 Cộng Hòa, Quận Tân Bình'\r\n                     bg='white'\r\n                     focusBorderColor='pink.300'\r\n                     lineHeight={'3'}\r\n                     h='60px'\r\n                     variant='outline'\r\n                     size='lg'\r\n                     boxShadow={'md'}\r\n                     fontSize='md'\r\n                     fontWeight={'semibold'}\r\n                     {...register('address')}\r\n                  />\r\n               </InputGroup>\r\n            </Skeleton>\r\n            <FormErrorMessage>{errors?.address?.message}</FormErrorMessage>\r\n         </FormControl>\r\n         <Spacer h={'15px'} />\r\n         <Flex\r\n            direction={flexDirection}\r\n         >\r\n            <FormControl\r\n               isRequired\r\n               marginBottom={'4'}\r\n               paddingX='27px'\r\n               isInvalid={!!errors?.city?.message}\r\n               errortext={errors?.city?.message}\r\n            >\r\n               <FormLabel color={'#525f7f'}>City</FormLabel>\r\n               <Skeleton isLoaded={!isLoading}>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='Thành phố Hồ Chí Minh'\r\n                        bg='white'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        {...register('city')}\r\n                     />\r\n                  </InputGroup>\r\n               </Skeleton>\r\n               <FormErrorMessage>{errors?.city?.message}</FormErrorMessage>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n               isRequired\r\n               marginBottom={'4'}\r\n               isInvalid={!!errors?.province?.message}\r\n               errortext={errors?.province?.message}\r\n            >\r\n               <FormLabel color={'#525f7f'}>Province or District</FormLabel>\r\n               <Skeleton isLoaded={!isLoading}>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='Thành phố Hồ Chí Minh'\r\n                        bg='white'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        {...register('province')}\r\n                     />\r\n                  </InputGroup>\r\n               </Skeleton>\r\n               <FormErrorMessage>{errors?.province?.message}</FormErrorMessage>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n               isRequired\r\n               marginBottom={'4'}\r\n               paddingX='27px'\r\n               isInvalid={!!errors?.country?.message}\r\n               errortext={errors?.country?.message}\r\n            >\r\n               <FormLabel color={'#525f7f'}>Country</FormLabel>\r\n               <Skeleton isLoaded={!isLoading}>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='Vietnam'\r\n                        bg='white'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        {...register('country')}\r\n                     />\r\n                  </InputGroup>\r\n               </Skeleton>\r\n               <FormErrorMessage>{errors?.country?.message}</FormErrorMessage>\r\n            </FormControl>\r\n         </Flex>\r\n         <ButtonSubmit\r\n            content='Update'\r\n            isLoading={isLoadingSubmit}\r\n         />\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default CardBody;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from '@chakra-ui/react';\r\nimport CardHeader from '../CardHeader';\r\nimport CardBody from '../CardBody';\r\n\r\nUserInformation.propTypes = {\r\n\r\n};\r\n\r\nfunction UserInformation(props) {\r\n   const { userInfo, isLoading, message } = props;\r\n\r\n   return (\r\n      <Box\r\n         marginTop={'-20'}\r\n         marginBottom={'0'}\r\n         flex='2'\r\n         boxShadow={'dark-lg'}\r\n\r\n         background='#f7fafc'\r\n         backgroundClip={'border-box'}\r\n\r\n         border={'1px solid rgba(0, 0, 0, .05)'}\r\n         borderRadius='0.375rem'\r\n      >\r\n         <CardHeader />\r\n         <CardBody userInfo={userInfo} isLoading={isLoading} message={message} />\r\n      </Box>\r\n   );\r\n}\r\n\r\nexport default UserInformation;","import axiosClient from './axiosClient';\r\n\r\nconst urlStoreImage = process.env.REACT_APP_API_STOREIMAGE;\r\nconsole.log(urlStoreImage);\r\n\r\nconst imageApi = {\r\n   uploadImage: (params) => {\r\n      const url = urlStoreImage;\r\n      return axiosClient.post(url, params, {\r\n         withCredentials: false\r\n      });\r\n   },\r\n};\r\n\r\nexport default imageApi;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react';\r\n\r\nModalBox.propTypes = {\r\n   isOpenModal: PropTypes.bool,\r\n   modalTitle: PropTypes.string,\r\n   modalContent: PropTypes.string,\r\n   buttonActionContent: PropTypes.string,\r\n   onActionClick: PropTypes.func,\r\n   onSetCloseModal: PropTypes.func,\r\n};\r\n\r\nfunction ModalBox(props) {\r\n   const { isOpenModal, modalTitle, modalContent, buttonActionContent, onActionClick, onSetCloseModal } = props;\r\n\r\n   const handleActionClick = () => {\r\n      if (onActionClick) onActionClick();\r\n   };\r\n\r\n   const handleCloseModal = () => {\r\n      if (onSetCloseModal) onSetCloseModal();\r\n   };\r\n\r\n   return (\r\n      <Modal isOpen={isOpenModal}>\r\n         <ModalOverlay />\r\n         <ModalContent>\r\n            <ModalHeader>{modalTitle}</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n               {modalContent}\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n               <Button colorScheme='yellow' mr={3} onClick={handleCloseModal}>\r\n                  CANCEL\r\n               </Button>\r\n               <Button colorScheme={'whatsapp'} onClick={handleActionClick} >{buttonActionContent}</Button>\r\n            </ModalFooter>\r\n         </ModalContent>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default ModalBox;","import Resizer from 'react-image-file-resizer';\r\n\r\nexport const resizeImage = (image) =>\r\n   new Promise((resolve) => {\r\n      Resizer.imageFileResizer(\r\n         image,\r\n         300,\r\n         300,\r\n         'JPEG',\r\n         100,\r\n         0,\r\n         (uri) => {\r\n            resolve(uri);\r\n         },\r\n         'base64',\r\n         300,\r\n         300\r\n      );\r\n   });","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, Divider, Flex, FormControl, FormLabel, Image, Input, InputGroup, Skeleton, Spacer, useToast, SkeletonCircle, FormErrorMessage } from '@chakra-ui/react';\r\nimport imageApi from '../../../../api/imageApi';\r\nimport IMAGES from '../../../../constants/images';\r\nimport ButtonSubmit from '../ButtonSubmit';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { playCorrectSound_audio, playWrongSound_audio } from '../../../../utils/PlaySound';\r\nimport userApi from '../../../../api/userApi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateInfo } from '../../userSlice';\r\nimport ModalBox from '../../../../components/ModalBox';\r\nimport { resizeImage } from '../../../../utils/ResizeImage';\r\n\r\nUserAccount.propTypes = {\r\n\r\n};\r\n\r\nUserAccount.DefaultProp = {\r\n\r\n};\r\n\r\nconst userAccountSchema = yup.object().shape({\r\n   currentPassword: yup\r\n      .string()\r\n      .required('⚠ Current password invalid'),\r\n   newPassword: yup\r\n      .string()\r\n      .required('⚠ New password invalid')\r\n      .min(6, '⚠ New password must be at least 6 characters')\r\n      .max(17, '⚠ New password must be at most 17 characters')\r\n      .matches(\r\n         /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n         \"⚠ Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n      ).notOneOf([yup.ref('currentPassword'), null], '⚠ New passwords not like current password'),\r\n   confirmNewPassword: yup\r\n      .string()\r\n      .required('⚠ Confirm new password invalid')\r\n      .oneOf([yup.ref('newPassword'), null], '⚠ Confirm new passwords must match'),\r\n});\r\n\r\nfunction UserAccount(props) {\r\n   const { userInfo, isLoading, message } = props;\r\n   const toast = useToast();\r\n\r\n   const [image, setImage] = useState(process.env.REACT_APP_DEFAULT_IMAGE);\r\n   const [imageBeforeUpload, setImageBeforeUpload] = useState(process.env.REACT_APP_DEFAULT_IMAGE);\r\n   const [isLoadingImg, setIsLoadingImg] = useState(false);\r\n   const [isLoadingChangePwd, setIsLoadingChangePwd] = useState(false);\r\n   const [statusModal, setStatusModal] = useState(false);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n      mode: 'all',\r\n      resolver: yupResolver(userAccountSchema),\r\n   });\r\n\r\n   useEffect(() => {\r\n      if (userInfo && userInfo.avatar !== process.env.REACT_APP_DEFAULT_IMAGE) {\r\n         setImage(userInfo.avatar);\r\n      }\r\n   }, [userInfo]);\r\n\r\n   const _onClickUpdatePhoto = () => {\r\n      document.getElementById('fileid').click();\r\n   };\r\n\r\n   const _onChangeImage = async (e) => {\r\n      setIsLoadingImg(true);\r\n      const img_profile = e.target.files[0];\r\n      if (img_profile === undefined) {\r\n         toast({\r\n            title: 'Choose your image ~~',\r\n            description: \"accept any type of images\",\r\n            status: 'warning',\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: 'top-right',\r\n         });\r\n         setIsLoadingImg(false);\r\n         return;\r\n      }\r\n      if (img_profile.type === 'image/jpeg' || img_profile.type === 'image/png') {\r\n         const imageAfterResize = await resizeImage(img_profile);\r\n         const data = new FormData();\r\n         data.append('file', imageAfterResize);\r\n         data.append('upload_preset', 'chat-app-basic');\r\n         data.append('cloud_name', 'thangduong');\r\n\r\n         try {\r\n            const response = await imageApi.uploadImage(data);\r\n            setImageBeforeUpload(image);\r\n            setImage(response.data.url);\r\n            setStatusModal(true);\r\n            setIsLoadingImg(false);\r\n         } catch (error) {\r\n            console.log(error);\r\n            setIsLoadingImg(false);\r\n         }\r\n      } else {\r\n         toast({\r\n            title: 'Choose your image ~~',\r\n            description: \"accept any type of images\",\r\n            status: 'warning',\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: 'top-right',\r\n         });\r\n         setIsLoadingImg(false);\r\n         return;\r\n      }\r\n   };\r\n\r\n   const _onSubmitForm = async (data) => {\r\n      setIsLoadingChangePwd(true);\r\n      console.log(\">>> Check data UserAccount: \", data);\r\n      if (data.newPassword === data.confirmNewPassword) {\r\n         const params = {\r\n            password: data.currentPassword,\r\n            newPassword: data.confirmNewPassword,\r\n         };\r\n\r\n         try {\r\n            const response = await userApi.updatePassword(params);\r\n            if (response.data.success) {\r\n               toast({\r\n                  title: 'Change password successfully !!',\r\n                  status: 'success',\r\n                  isClosable: true,\r\n                  duration: 3000,\r\n                  position: 'top',\r\n                  variant: 'left-accent',\r\n               });\r\n               playCorrectSound_audio();\r\n            }\r\n         } catch (error) {\r\n            playWrongSound_audio();\r\n            toast({\r\n               title: 'Error Occured!',\r\n               description: error.response.data.message,\r\n               status: 'error',\r\n               duration: 3000,\r\n               isClosable: true,\r\n               position: 'top',\r\n               variant: 'left-accent',\r\n            });\r\n         } finally {\r\n            setIsLoadingChangePwd(false);\r\n         }\r\n      }\r\n      else {\r\n         playWrongSound_audio();\r\n         toast({\r\n            title: 'Error Occured!',\r\n            description: 'New password not match',\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: 'top',\r\n            variant: 'left-accent',\r\n         });\r\n         setIsLoadingChangePwd(false);\r\n      }\r\n   };\r\n\r\n   const handleOnChangeModal = () => {\r\n      const params = {\r\n         address: {\r\n            city: userInfo && userInfo.address && userInfo.address.city ? userInfo.address.city : '',\r\n            country: userInfo && userInfo.address && userInfo.address.country ? userInfo.address.country : '',\r\n            houseNumber: userInfo && userInfo.address && userInfo.address.houseNumber ? userInfo.address.houseNumber : '',\r\n            province: userInfo && userInfo.address && userInfo.address.province ? userInfo.address.province : '',\r\n            streetName: userInfo && userInfo.address && userInfo.address.streetName ? userInfo.address.streetName : '',\r\n         },\r\n         avatar: image,\r\n         firstName: userInfo && userInfo.firstName ? userInfo.firstName : '',\r\n         lastName: userInfo && userInfo.lastName ? userInfo.lastName : '',\r\n         phone: userInfo && userInfo.phone ? userInfo.phone : '',\r\n      }\r\n\r\n      dispatch(updateInfo(params))\r\n         .unwrap()\r\n         .then((res) => {\r\n            setStatusModal(false);\r\n            toast({\r\n               title: 'Change avatar successfully 😚😗😚',\r\n               status: 'success',\r\n               duration: 2000,\r\n               isClosable: true,\r\n               position: 'top',\r\n            });\r\n         })\r\n         .catch((err) => {\r\n            setImage(imageBeforeUpload);\r\n            setStatusModal(false);\r\n            toast({\r\n               title: 'Something wrongs when save your changing 😢😢😢',\r\n               description: err,\r\n               status: 'error',\r\n               duration: 2000,\r\n               isClosable: true,\r\n               position: 'top',\r\n            });\r\n         });\r\n   };\r\n\r\n   const handleCloseModal = () => {\r\n      setIsLoadingImg(true);\r\n      setStatusModal(false);\r\n      setImage(imageBeforeUpload);\r\n      setIsLoadingImg(false);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {\r\n            <ModalBox\r\n               isOpenModal={statusModal}\r\n               modalTitle='Confirm Action'\r\n               modalContent='Are you sure to change avatar'\r\n               buttonActionContent='CONFIRM'\r\n               onActionClick={handleOnChangeModal}\r\n               onSetCloseModal={handleCloseModal}\r\n            />\r\n         }\r\n         <Box\r\n            h={'100%'}\r\n            marginTop={'-20'}\r\n            marginBottom={'0'}\r\n            flex='1'\r\n            boxShadow={'dark-lg'}\r\n\r\n            background='#fff'\r\n            backgroundClip={'border-box'}\r\n\r\n            // border={'1px solid rgba(0, 0, 0, .05)'}\r\n            borderRadius='0.375rem'\r\n\r\n            paddingBottom='1.5rem'\r\n         >\r\n            <Flex\r\n               justify={'center'}\r\n               marginTop='-70px'\r\n            >\r\n               {\r\n                  isLoadingImg ?\r\n                     <SkeletonCircle size='200px' />\r\n                     :\r\n                     <Image\r\n                        borderRadius='full'\r\n                        boxSize='200px'\r\n                        src={image}\r\n                        alt='Dan Abramov'\r\n                     />\r\n               }\r\n            </Flex>\r\n            <Flex\r\n               justify={'space-between'}\r\n               paddingX={'1.25rem'}\r\n               marginTop='-109px'\r\n            >\r\n               <Button\r\n                  bg={'#11cdef'}\r\n                  color='#fff'\r\n\r\n                  lineHeight='1.5'\r\n\r\n                  size='sm'\r\n                  padding={'.25rem .5rem'}\r\n\r\n                  boxShadow={'0 4px 6px rgb(50 50 93 / 11%), 0 1px 3px rgb(0 0 0 / 8%)'}\r\n                  borderRadius='.375rem'\r\n               >\r\n                  Delete\r\n               </Button>\r\n               <Button\r\n                  bg={'#172b4d'}\r\n                  color='#fff'\r\n\r\n                  lineHeight='1.5'\r\n\r\n                  size='sm'\r\n                  padding={'.25rem .5rem'}\r\n\r\n                  boxShadow={'0 4px 6px rgb(50 50 93 / 11%), 0 1px 3px rgb(0 0 0 / 8%)'}\r\n                  borderRadius='.375rem'\r\n\r\n                  onClick={() => { _onClickUpdatePhoto() }}\r\n               >\r\n                  Update\r\n               </Button>\r\n               <Input\r\n                  id='fileid'\r\n                  hidden\r\n                  name='image'\r\n                  type={'file'}\r\n                  p={1.5}\r\n                  accept='image/*'\r\n                  onChange={(e) => _onChangeImage(e)}\r\n               />\r\n            </Flex>\r\n            <form\r\n               style={{ paddingLeft: '1.5rem', paddingRight: '1.5rem', paddingTop: '1.6rem' }}\r\n               onSubmit={handleSubmit(_onSubmitForm)}\r\n            >\r\n               <FormControl\r\n                  isRequired\r\n                  marginTop={'70px'}\r\n                  marginBottom='4'\r\n                  paddingX='27px'\r\n               >\r\n                  <FormLabel color={'#525f7f'}>Username</FormLabel>\r\n                  <Skeleton isLoaded={!isLoading}>\r\n                     <InputGroup>\r\n                        <Input\r\n                           isDisabled\r\n                           borderColor={'gray.500'}\r\n                           placeholder='ThangCute'\r\n                           bg='gray.50'\r\n                           focusBorderColor='pink.300'\r\n                           lineHeight={'3'}\r\n                           h='60px'\r\n                           variant='outline'\r\n                           size='lg'\r\n                           boxShadow={'md'}\r\n                           fontSize='md'\r\n                           fontWeight={'semibold'}\r\n                           defaultValue={userInfo && userInfo.userName ? userInfo.userName : ''}\r\n                        />\r\n                     </InputGroup>\r\n                  </Skeleton>\r\n               </FormControl>\r\n\r\n               <Spacer h={'15px'} />\r\n\r\n               <FormControl\r\n                  isRequired\r\n                  paddingX='27px'\r\n                  isInvalid={!!errors?.currentPassword?.message}\r\n                  errortext={errors?.currentPassword?.message}\r\n               >\r\n                  <FormLabel color={'#525f7f'}>Current password</FormLabel>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='Current password'\r\n                        bg='gray.50'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        {...register('currentPassword')}\r\n                     />\r\n                  </InputGroup>\r\n                  <FormErrorMessage>{errors?.currentPassword?.message}</FormErrorMessage>\r\n               </FormControl>\r\n\r\n               <Spacer h={'15px'} />\r\n\r\n               <FormControl\r\n                  isRequired\r\n                  paddingX='27px'\r\n                  isInvalid={!!errors?.newPassword?.message}\r\n                  errortext={errors?.newPassword?.message}\r\n               >\r\n                  <FormLabel color={'#525f7f'}>New password</FormLabel>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='New password'\r\n                        bg='gray.50'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        {...register('newPassword')}\r\n                     />\r\n                  </InputGroup>\r\n                  <FormErrorMessage>{errors?.newPassword?.message}</FormErrorMessage>\r\n               </FormControl>\r\n               <Spacer h={'15px'} />\r\n               <FormControl\r\n                  isRequired\r\n                  paddingX='27px'\r\n                  isInvalid={!!errors?.confirmNewPassword?.message}\r\n                  errortext={errors?.confirmNewPassword?.message}\r\n               >\r\n                  <FormLabel color={'#525f7f'}>Confirm new password</FormLabel>\r\n                  <InputGroup>\r\n                     <Input\r\n                        placeholder='Confirm new password'\r\n                        bg='gray.50'\r\n                        focusBorderColor='pink.300'\r\n                        lineHeight={'3'}\r\n                        h='60px'\r\n                        variant='outline'\r\n                        size='lg'\r\n                        boxShadow={'md'}\r\n                        fontSize='md'\r\n                        fontWeight={'semibold'}\r\n                        {...register('confirmNewPassword')}\r\n                     />\r\n                  </InputGroup>\r\n                  <FormErrorMessage>{errors?.confirmNewPassword?.message}</FormErrorMessage>\r\n               </FormControl>\r\n\r\n               <ButtonSubmit\r\n                  content='Change password'\r\n                  isLoading={isLoadingChangePwd}\r\n               />\r\n            </form>\r\n         </Box>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default UserAccount;","import React, { useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, Flex, Spacer, Text } from '@chakra-ui/react';\r\nimport Banner from '../../../../components/Banner';\r\nimport DisplayText from '../../components/DisplayText';\r\nimport UserInformation from '../../components/UserInformation';\r\nimport UserAccount from '../../components/UserAccount';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getInfo } from '../../userSlice';\r\nimport userApi from '../../../../api/userApi';\r\n\r\nUserProfile.propTypes = {\r\n\r\n};\r\n\r\nfunction UserProfile(props) {\r\n   const dispatch = useDispatch();\r\n\r\n   const { userInfo, isLoading } = useSelector((state) => state.user);\r\n   const { message } = useSelector((state) => state.message);\r\n\r\n   const initFetch = useCallback(async () => {\r\n      dispatch(getInfo());\r\n   }, [dispatch]);\r\n\r\n   useEffect(() => {\r\n      initFetch();\r\n   }, [initFetch]);\r\n\r\n   return (\r\n      <>\r\n         <Banner\r\n            heading={'Profile'}\r\n         />\r\n         <Box>\r\n            <Container\r\n               maxW={'7xl'}\r\n               zIndex='100'\r\n\r\n               padding='12'\r\n               marginX={'auto'}\r\n\r\n               backgroundColor='#f7f6fbb0'\r\n            >\r\n               <DisplayText userName={userInfo && userInfo.userName ? userInfo.userName : 'USERNAME'} />\r\n            </Container>\r\n\r\n            <Container\r\n               maxW={'7xl'}\r\n               padding='12'\r\n               backgroundColor='#dffeeca8'\r\n            >\r\n               <Flex>\r\n                  <UserInformation userInfo={userInfo} isLoading={isLoading} message={message} />\r\n                  <Spacer maxW='30px' />\r\n                  <UserAccount userInfo={userInfo} isLoading={isLoading} message={message} />\r\n               </Flex>\r\n            </Container>\r\n         </Box>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default UserProfile;","import wrongSound from '../assets/sounds/wrong.mp3';\r\nimport correctSound from '../assets/sounds/correct.mp3';\r\n\r\nconst Sounds = {\r\n   WRONG_SOUND: wrongSound,\r\n   CORRECT_SOUND: correctSound,\r\n};\r\n\r\nexport default Sounds;","import Sounds from \"../constants/sounds\";\r\n\r\nconst wrongSound_audio = new Audio(Sounds.WRONG_SOUND);\r\nconst correctSound_audio = new Audio(Sounds.CORRECT_SOUND);\r\n\r\nexport const playWrongSound_audio = () => {\r\n   wrongSound_audio.play();\r\n};\r\n\r\nexport const pauseWrongSound_audio = () => {\r\n   wrongSound_audio.pause();\r\n};\r\n\r\nexport const playCorrectSound_audio = () => {\r\n   correctSound_audio.play();\r\n};\r\n\r\nexport const pauseCorrectSound_audio = () => {\r\n   correctSound_audio.pause();\r\n};"],"names":["props","margin","padding","maxWidth","width","backgroundImage","IMAGES","height","marginTop","color","fontSize","heading","alignItems","justifyContent","borderRadius","background","lineHeight","fontWeight","userName","align","marginBottom","marginX","wrap","direction","as","size","isTruncated","border","_first","bg","justify","boxShadow","FormLable","content","textTransform","letterSpacing","paddingY","DefaultProp","ButtonSubmit","isLoading","type","colorScheme","h","paddingX","_hover","bgGradient","defaultProps","userInformationSchema","yup","shape","firstName","lastName","phone","min","max","address","city","province","country","userInfo","flexDirection","message","useBreakpointValue","base","lg","toast","useToast","useState","isLoadingSubmit","setIsLoadingSubmit","console","log","dispatch","useDispatch","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","reset","formState","setValue","statusAddress","useEffect","ads","houseNumber","streetName","AddressDisplay","style","onSubmit","data","houseNum","streetN","dataAddress","trim","indexOfSpacing","indexOf","slice","length","params","avatar","process","updateInfo","unwrap","then","res","title","status","duration","isClosable","position","catch","err","description","finally","isRequired","w","isInvalid","errortext","isLoaded","placeholder","focusBorderColor","variant","isDisabled","borderColor","defaultValue","email","marginY","flex","backgroundClip","urlStoreImage","uploadImage","axiosClient","withCredentials","isOpenModal","modalTitle","modalContent","buttonActionContent","onActionClick","onSetCloseModal","isOpen","mr","onClick","resizeImage","image","Promise","resolve","Resizer","uri","UserAccount","userAccountSchema","currentPassword","required","newPassword","matches","notOneOf","confirmNewPassword","oneOf","setImage","imageBeforeUpload","setImageBeforeUpload","isLoadingImg","setIsLoadingImg","isLoadingChangePwd","setIsLoadingChangePwd","statusModal","setStatusModal","_onChangeImage","e","undefined","img_profile","target","files","imageAfterResize","FormData","append","imageApi","response","url","_onSubmitForm","password","userApi","success","playCorrectSound_audio","playWrongSound_audio","paddingBottom","boxSize","src","alt","document","getElementById","click","id","hidden","name","p","accept","onChange","paddingLeft","paddingRight","paddingTop","useSelector","state","user","initFetch","useCallback","getInfo","Banner","maxW","zIndex","backgroundColor","WRONG_SOUND","CORRECT_SOUND","wrongSound_audio","Audio","Sounds","correctSound_audio","play"],"sourceRoot":""}